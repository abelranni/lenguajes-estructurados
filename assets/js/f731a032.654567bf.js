"use strict";(self.webpackChunklenguajes_estructurados=self.webpackChunklenguajes_estructurados||[]).push([[127],{3905:(e,r,t)=>{t.d(r,{Zo:()=>i,kt:()=>f});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=a.createContext({}),c=function(e){var r=a.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},i=function(e){var r=c(e.components);return a.createElement(u.Provider,{value:r},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},m=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=n,f=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(f,s(s({ref:r},i),{},{components:t})):a.createElement(f,s({ref:r},i))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l[p]="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4151:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=t(7462),n=(t(7294),t(3905));const o={},s=void 0,l={unversionedId:"Ejercicios Resueltos/03.05.C_mejoras",id:"Ejercicios Resueltos/03.05.C_mejoras",title:"03.05.C_mejoras",description:"---",source:"@site/docs/03 - Ejercicios Resueltos/03.05.C_mejoras.md",sourceDirName:"03 - Ejercicios Resueltos",slug:"/Ejercicios Resueltos/03.05.C_mejoras",permalink:"/lenguajes-estructurados/docs/Ejercicios Resueltos/03.05.C_mejoras",draft:!1,editUrl:"https://github.com/abelranni/lenguajes-estructurados/tree/main/wewbsite/docs/03 - Ejercicios Resueltos/03.05.C_mejoras.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"03.05 -  TicTacToe - Estados",permalink:"/lenguajes-estructurados/docs/Ejercicios Resueltos/03.05.B_estados"},next:{title:"04 - Redes",permalink:"/lenguajes-estructurados/docs/category/04---redes"}},u={},c=[{value:"paginate: true",id:"paginate-true",level:2},{value:"Lenguajes Estructurados",id:"lenguajes-estructurados",level:2},{value:"Estructura para el tablero",id:"estructura-para-el-tablero",level:2}],i={toc:c},p="wrapper";function d(e){let{components:r,...t}=e;return(0,n.kt)(p,(0,a.Z)({},i,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("hr",null),(0,n.kt)("p",null,"marp: false\ntheme: default\nsize: 16:9"),(0,n.kt)("h2",{id:"paginate-true"},"paginate: true"),(0,n.kt)("h1",{id:"0305----tictactoe---mejoras"},"03.05 -  TicTacToe - Mejoras"),(0,n.kt)("h2",{id:"lenguajes-estructurados"},"Lenguajes Estructurados"),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"estructura-para-el-tablero"},"Estructura para el tablero"),(0,n.kt)("p",null,"Se puede crear una estructura ",(0,n.kt)("inlineCode",{parentName:"p"},"Board")," que contenga la matriz bidimensional que representa el tablero del juego, as\xed como cualquier otra informaci\xf3n que pueda ser relevante para el estado del tablero."),(0,n.kt)("p",null,"Por ejemplo:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"#define BOARD_SIZE 3\n\ntypedef struct {\n    int cells[BOARD_SIZE][BOARD_SIZE];\n    int current_player;\n    int move_count;\n} Board;\n\nBoard board;\n")),(0,n.kt)("p",null,"En este caso, la estructura ",(0,n.kt)("inlineCode",{parentName:"p"},"Board")," contiene la matriz ",(0,n.kt)("inlineCode",{parentName:"p"},"cells")," que representa el tablero del juego, as\xed como ",(0,n.kt)("inlineCode",{parentName:"p"},"current_player"),", que puede ser \xfatil para rastrear a qui\xe9n le toca jugar, y ",(0,n.kt)("inlineCode",{parentName:"p"},"move_count"),", que puede ser \xfatil para rastrear cu\xe1ntos movimientos se han realizado en total."),(0,n.kt)("p",null,"Luego, se puede acceder a los miembros de la estructura ",(0,n.kt)("inlineCode",{parentName:"p"},"Board")," de esta manera:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},"board.cells[0][0] = 1;\nboard.current_player = 2;\nboard.move_count++;\n")),(0,n.kt)("p",null,"Y se puede pasar la estructura ",(0,n.kt)("inlineCode",{parentName:"p"},"Board")," a funciones como esta:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-c"},'void printBoard(Board board) {\n    for (int i = 0; i < BOARD_SIZE; ++i) {\n        for (int j = 0; j < BOARD_SIZE; ++j) {\n            printf("%d ", board.cells[i][j]);\n        }\n        printf("\\n");\n    }\n}\n')),(0,n.kt)("p",null,"Usar una estructura de datos como esta puede hacer que el c\xf3digo sea m\xe1s organizado y m\xe1s f\xe1cil de trabajar, especialmente al momento de agregar m\xe1s caracter\xedsticas al juego en el futuro."),(0,n.kt)("hr",null))}d.isMDXComponent=!0}}]);