"use strict";(self.webpackChunklenguajes_estructurados=self.webpackChunklenguajes_estructurados||[]).push([[735],{3905:(e,a,n)=>{n.d(a,{Zo:()=>c,kt:()=>k});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?t.createElement(k,i(i({ref:a},c),{},{components:n})):t.createElement(k,i({ref:a},c))}));function k(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9569:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var t=n(7462),r=(n(7294),n(3905));const l={marp:!0,theme:"default",size:969,paginate:!0},i="02.01 - Conceptos Generales",o={unversionedId:"Lenguaje C/02.01_conceptos",id:"Lenguaje C/02.01_conceptos",title:"02.01 - Conceptos Generales",description:"Lenguajes Estructurados",source:"@site/docs/02 - Lenguaje C/02.01_conceptos.md",sourceDirName:"02 - Lenguaje C",slug:"/Lenguaje C/02.01_conceptos",permalink:"/lenguajes-estructurados/docs/Lenguaje C/02.01_conceptos",draft:!1,editUrl:"https://github.com/abelranni/lenguajes-estructurados/tree/main/docs/02 - Lenguaje C/02.01_conceptos.md",tags:[],version:"current",frontMatter:{marp:!0,theme:"default",size:969,paginate:!0},sidebar:"tutorialSidebar",previous:{title:"02 - Lenguaje C",permalink:"/lenguajes-estructurados/docs/category/02---lenguaje-c"},next:{title:"02.02 - Estructuras de datos",permalink:"/lenguajes-estructurados/docs/Lenguaje C/02.02_estructuras"}},s={},u=[{value:"Lenguajes Estructurados",id:"lenguajes-estructurados",level:2},{value:"Lenguaje C",id:"lenguaje-c",level:2},{value:"Sintaxis b\xe1sica",id:"sintaxis-b\xe1sica",level:2},{value:"Declaraciones",id:"declaraciones",level:2},{value:"Expresiones",id:"expresiones",level:2},{value:"Tipos de datos",id:"tipos-de-datos",level:2},{value:"Tipos de datos b\xe1sicos",id:"tipos-de-datos-b\xe1sicos",level:2},{value:"Tipos de datos compuestos",id:"tipos-de-datos-compuestos",level:2},{value:"Variables",id:"variables",level:2},{value:"Constantes",id:"constantes",level:2},{value:"Operadores",id:"operadores",level:2},{value:"Funciones",id:"funciones",level:2},{value:"Estructuras de control de flujo",id:"estructuras-de-control-de-flujo",level:2},{value:"Bucles",id:"bucles",level:2},{value:"Arrays",id:"arrays",level:2},{value:"Punteros",id:"punteros",level:2},{value:"Estructuras",id:"estructuras",level:2}],c={toc:u},p="wrapper";function d(e){let{components:a,...n}=e;return(0,r.kt)(p,(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"0201---conceptos-generales"},"02.01 - Conceptos Generales"),(0,r.kt)("h2",{id:"lenguajes-estructurados"},"Lenguajes Estructurados"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"lenguaje-c"},"Lenguaje C"),(0,r.kt)("p",null,"El lenguaje C es un lenguaje de programaci\xf3n de alto nivel, desarrollado en la d\xe9cada de 1970. Se caracteriza por su eficiencia, su capacidad para trabajar a bajo nivel y su sintaxis compacta."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n\nint main() {\n    printf("Hola, mundo!\\n");\n    return 0;\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'La funci\xf3n "main" es el punto de entrada del programa.'),(0,r.kt)("li",{parentName:"ul"},'La biblioteca "stdio.h" se utiliza para entrada/salida.'),(0,r.kt)("li",{parentName:"ul"},'La funci\xf3n "printf" se utiliza para imprimir texto en la consola.'),(0,r.kt)("li",{parentName:"ul"},'El car\xe1cter "\\n" se utiliza para indicar un salto de l\xednea.'),(0,r.kt)("li",{parentName:"ul"},'La declaraci\xf3n "return 0" indica que el programa ha finalizado correctamente.')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"sintaxis-b\xe1sica"},"Sintaxis b\xe1sica"),(0,r.kt)("p",null,"La sintaxis b\xe1sica de C es relativamente sencilla. Un programa en C se compone de funciones, que a su vez se componen de declaraciones y expresiones."),(0,r.kt)("h2",{id:"declaraciones"},"Declaraciones"),(0,r.kt)("p",null,"Una declaraci\xf3n es una instrucci\xf3n que le dice al compilador qu\xe9 hacer. Por ejemplo, una declaraci\xf3n puede ser una asignaci\xf3n de valor a una variable, una llamada a una funci\xf3n o una declaraci\xf3n de una variable."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"expresiones"},"Expresiones"),(0,r.kt)("p",null,"Una expresi\xf3n es una combinaci\xf3n de valores, variables, operadores y funciones que se eval\xfaa para producir un resultado."),(0,r.kt)("h2",{id:"tipos-de-datos"},"Tipos de datos"),(0,r.kt)("p",null,"C es un lenguaje fuertemente tipado, lo que significa que cada variable tiene un tipo de datos asociado. El tipo de datos determina el tama\xf1o y el rango de valores que puede tener una variable, as\xed como el conjunto de operaciones que se pueden realizar en ella."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"tipos-de-datos-b\xe1sicos"},"Tipos de datos b\xe1sicos"),(0,r.kt)("p",null,"C proporciona los siguientes tipos de datos b\xe1sicos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enteros: se utilizan para representar n\xfameros enteros. Por ejemplo, 1, 2, 3, 4, etc."),(0,r.kt)("li",{parentName:"ul"},"Punto flotante: se utilizan para representar n\xfameros con decimales. Por ejemplo, 1.0, 2.5, 3.14159, etc."),(0,r.kt)("li",{parentName:"ul"},"Caracteres: se utilizan para representar caracteres individuales. Por ejemplo, 'a', 'b', 'c', etc."),(0,r.kt)("li",{parentName:"ul"},"Booleanos: se utilizan para representar valores l\xf3gicos. Por ejemplo, true, false.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"tipos-de-datos-compuestos"},"Tipos de datos compuestos"),(0,r.kt)("p",null,"C tambi\xe9n proporciona los siguientes tipos de datos compuestos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Arreglos: se utilizan para representar colecciones de datos del mismo tipo. Por ejemplo, ","[1, 2, 3, 4, 5]","."),(0,r.kt)("li",{parentName:"ul"},'Estructuras: se utilizan para representar colecciones de datos de diferentes tipos. Por ejemplo, {nombre: "John", edad: 30}.'),(0,r.kt)("li",{parentName:"ul"},"Punteros: se utilizan para representar direcciones de memoria. Por ejemplo, 0x7ffeefbff5a0.")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"variables"},"Variables"),(0,r.kt)("p",null,"Una variable es un espacio de memoria que se utiliza para almacenar un valor. Cada variable tiene un nombre y un tipo de datos asociado. El nombre de una variable se utiliza para referirse a su valor."),(0,r.kt)("h2",{id:"constantes"},"Constantes"),(0,r.kt)("p",null,"Una constante es un espacio de memoria que se utiliza para almacenar un valor que no cambia. Cada constante tiene un nombre y un tipo de datos asociado. El nombre de una constante se utiliza para referirse a su valor."),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"operadores"},"Operadores"),(0,r.kt)("p",null,"Los operadores son s\xedmbolos especiales que se utilizan para realizar operaciones en variables y constantes."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Aritm\xe9ticos: se utilizan para realizar operaciones aritm\xe9ticas. Por ejemplo, +, -, *, /, %"),(0,r.kt)("li",{parentName:"ul"},"Relacionales: se utilizan para comparar valores. Por ejemplo, ==, !=, <, >, <=, >="),(0,r.kt)("li",{parentName:"ul"},"L\xf3gicos: se utilizan para combinar expresiones l\xf3gicas. Por ejemplo, &&, ||, !"),(0,r.kt)("li",{parentName:"ul"},"Bit a bit: se utilizan para realizar operaciones bit a bit. Por ejemplo, &, |, ^, ~, <<, >>")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"funciones"},"Funciones"),(0,r.kt)("p",null,"Una funci\xf3n es un bloque de c\xf3digo que se ejecuta cuando se llama a su nombre. Las funciones se utilizan para organizar el c\xf3digo en bloques reutilizables."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se utilizan para encapsular un bloque de c\xf3digo que se puede reutilizar."),(0,r.kt)("li",{parentName:"ul"},'Se definen mediante la palabra clave "void" o el tipo de dato que devuelve.')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'int suma(int a, int b) {\n    return a + b;\n}\n\nvoid main() {\n    int resultado = suma(2, 3);\n    printf("%d\\n", resultado);\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"estructuras-de-control-de-flujo"},"Estructuras de control de flujo"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"if-else: Se utiliza para ejecutar un bloque de c\xf3digo si se cumple una condici\xf3n, y otro bloque de c\xf3digo si no se cumple.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'if (edad >= 18) {\n    printf("Eres mayor de edad.\\n");\n} else {\n    printf("Eres menor de edad.\\n");\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"switch: Se utiliza para ejecutar diferentes bloques de c\xf3digo en funci\xf3n del valor de una variable.")),(0,r.kt)("hr",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'switch (dia) {\n    case 1:\n        printf("Lunes\\n");\n        break;\n    case 2:\n        printf("Martes\\n");\n        break;\n    case 3:\n        printf("Mi\xe9rcoles\\n");\n        break;\n    default:\n        printf("D\xeda desconocido\\n");\n        break;\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"bucles"},"Bucles"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"for: Se utiliza para repetir un bloque de c\xf3digo un n\xfamero determinado de veces.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'for (int i = 0; i < 10; i++) {\n    printf("%d\\n", i);\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"while: Se utiliza para repetir un bloque de c\xf3digo mientras se cumpla una condici\xf3n.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'int i = 0;\nwhile (i < 10) {\n    printf("%d\\n", i);\n    i++;\n}\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"arrays"},"Arrays"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se utilizan para almacenar colecciones de datos del mismo tipo."),(0,r.kt)("li",{parentName:"ul"},"Se accede a los elementos de un array mediante un \xedndice.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'int numeros[5] = { 1, 2, 3, 4, 5 };\nprintf("%d\\n", numeros[0]);\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"punteros"},"Punteros"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se utilizan para almacenar direcciones de memoria."),(0,r.kt)("li",{parentName:"ul"},'Se definen mediante el operador "*".')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'int a = 5;\nint *p = &a;\nprintf("%d\\n", *p);\n')),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"estructuras"},"Estructuras"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Se utilizan para encapsular colecciones de datos de diferentes tipos."),(0,r.kt)("li",{parentName:"ul"},'Se definen mediante la palabra clave "struct".')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c"},'struct Persona {\n    char nombre[20];\n    int edad;\n};\n\nstruct Persona p = { "Juan", 20 };\nprintf("%s\\n", p.nombre);\n')))}d.isMDXComponent=!0}}]);